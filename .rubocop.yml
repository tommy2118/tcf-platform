AllCops:
  NewCops: enable
  SuggestExtensions: false

Style/Documentation:
  Enabled: false

# Disable false positives for service lifecycle methods
Naming/PredicateMethod:
  Enabled: false

Metrics/BlockLength:
  Exclude:
    - 'spec/**/*'
    - 'lib/cli/**/*'  # CLI modules use class_eval blocks
    - 'lib/build_coordinator.rb'  # Build iteration blocks are complex by nature

Metrics/MethodLength:
  Exclude:
    - 'lib/cli/**/*'
    - 'lib/docker_manager.rb'  # Service status method is complex by nature
    - 'lib/config_validator.rb'  # Complex validation logic
    - 'lib/security_manager.rb'  # Security methods need comprehensive logic
    - 'lib/config_generator.rb'  # Template validation requires comprehensive logic
    - 'lib/config_manager.rb'  # Service environment building is complex by nature
    - 'lib/configuration_exceptions.rb'  # Exception factories need comprehensive context
    - 'lib/performance_optimizer.rb'  # Performance measurement requires detailed logic
    - 'lib/build_coordinator.rb'  # Build coordination methods are inherently complex
    - 'lib/repository_manager.rb'  # Git operations require comprehensive error handling
    - 'lib/dev_environment.rb'  # Development environment setup requires comprehensive logic
    - 'lib/system_checker.rb'  # System validation requires detailed checking
    - 'lib/test_coordinator.rb'  # Test coordination involves complex service management
    - 'lib/migration_manager.rb'  # Database migration logic requires comprehensive handling

Metrics/AbcSize:
  Exclude:
    - 'lib/cli/**/*'
    - 'lib/config_validator.rb'
    - 'lib/security_manager.rb'
    - 'lib/config_manager.rb'  # Service environment building has high ABC due to complexity
    - 'lib/performance_optimizer.rb'  # Parallel processing requires multiple operations
    - 'lib/build_coordinator.rb'  # Build coordination involves multiple operations by design
    - 'lib/repository_manager.rb'  # Repository operations involve multiple steps by design
    - 'lib/dev_environment.rb'  # Environment setup involves multiple validation steps
    - 'lib/system_checker.rb'  # System checking requires multiple validation operations
    - 'lib/test_coordinator.rb'  # Test coordination involves multiple service operations
    - 'lib/migration_manager.rb'  # Migration management requires multiple database operations

Metrics/ClassLength:
  Exclude:
    - 'lib/docker_manager.rb'  # Core orchestration class is complex
    - 'lib/config_validator.rb'  # Comprehensive validation logic
    - 'lib/security_manager.rb'  # Extensive security functionality
    - 'lib/config_generator.rb'  # Comprehensive template and generation logic
    - 'lib/config_manager.rb'  # Core configuration management functionality
    - 'lib/performance_optimizer.rb'  # Comprehensive performance utilities
    - 'lib/build_coordinator.rb'  # Comprehensive build coordination functionality
    - 'lib/repository_manager.rb'  # Repository management operations are complex
    - 'lib/dev_environment.rb'  # Development environment management requires extensive functionality
    - 'lib/system_checker.rb'  # System validation requires comprehensive checking logic
    - 'lib/test_coordinator.rb'  # Test coordination requires extensive service management
    - 'lib/migration_manager.rb'  # Database migration management is inherently complex

Metrics/ModuleLength:
  Exclude:
    - 'lib/cli/**/*'  # CLI command modules are inherently large

Metrics/CyclomaticComplexity:
  Max: 10
  Exclude:
    - 'lib/cli/**/*'  # CLI modules have complex conditional logic by design
    - 'lib/security_manager.rb'  # Password strength calculation requires complex logic
    - 'lib/config_manager.rb'  # Service configuration requires conditional logic

Metrics/PerceivedComplexity:
  Max: 10
  Exclude:
    - 'lib/cli/**/*'  # CLI modules have complex conditional logic by design
    - 'lib/security_manager.rb'  # Security algorithms require complex logic
    - 'lib/config_manager.rb'  # Configuration logic inherently complex
    - 'lib/test_coordinator.rb'  # Test result aggregation requires complex conditional logic

# Format strings are acceptable for table output
Style/FormatStringToken:
  Exclude:
    - 'lib/cli/status_commands.rb'

# Multiline block chains are acceptable in test scenarios and complex data processing
Style/MultilineBlockChain:
  Exclude:
    - 'spec/**/*'
    - 'lib/dev_environment.rb'  # Prerequisites validation requires chained data processing

# Duplicate branch bodies are acceptable in utility methods with similar error handling
Lint/DuplicateBranch:
  Exclude:
    - 'lib/config_manager.rb'  # Service configuration methods have similar fallback logic
    - 'lib/performance_optimizer.rb'  # Object size estimation has similar default cases

# Line length exceptions for test files and complex data structures
Layout/LineLength:
  Exclude:
    - 'spec/**/*'  # Test files often have long mock data and expectations
    - 'lib/cli/**/*'  # CLI output formatting often requires long lines for alignment