# TCF Platform Kubernetes Deployment
# <%= environment.capitalize %> Environment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tcf-gateway
  labels:
    app: tcf-gateway
    environment: <%= environment %>
spec:
  replicas: <%= environment == 'production' ? 3 : 1 %>
  selector:
    matchLabels:
      app: tcf-gateway
  template:
    metadata:
      labels:
        app: tcf-gateway
        environment: <%= environment %>
    spec:
      containers:
      - name: tcf-gateway
        image: tcf/gateway:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: RACK_ENV
          value: "<%= environment %>"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: tcf-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: tcf-secrets
              key: redis-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: tcf-gateway
  labels:
    app: tcf-gateway
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: tcf-gateway

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tcf-personas
  labels:
    app: tcf-personas
    environment: <%= environment %>
spec:
  replicas: <%= environment == 'production' ? 2 : 1 %>
  selector:
    matchLabels:
      app: tcf-personas
  template:
    metadata:
      labels:
        app: tcf-personas
        environment: <%= environment %>
    spec:
      containers:
      - name: tcf-personas
        image: tcf/personas:latest
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: RACK_ENV
          value: "<%= environment %>"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: tcf-secrets
              key: database-url
        resources:
          requests:
            memory: "128Mi"
            cpu: "125m"
          limits:
            memory: "256Mi"
            cpu: "250m"

---
apiVersion: v1
kind: Service
metadata:
  name: tcf-personas
  labels:
    app: tcf-personas
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: tcf-personas

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_USER
          value: "tcf"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tcf-secrets
              key: postgres-password
        - name: POSTGRES_DB
          value: "tcf_platform"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres